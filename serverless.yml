service: sender-api

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-1
  stage: ${opt:stage, self:custom.defaultStage}
  environment: ${file(./config/environments/${self:provider.stage}.json)}
  iamRoleStatements: ${file(./config/serverless/db.dynamo.iam.role.yaml)}

custom:
  defaultStage: dev
  tableName: ${self:provider.environment.DbTableName}
  dbWriteCapacityUnits: ${self:provider.environment.DbWriteCapacityUnits}
  dbReadCapacityUnits: ${self:provider.environment.DbReadCapacityUnits}
  dynamodb:
    stages:
      - dev
    start:
      start:
      host: ${self:provider.environment.DB_HOST}
      port: ${self:provider.environment.DB_PORT}
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      projects:
        sources:
          - table: ${self:provider.environment.DbTableName}
            sources: ['./config/seed/projects.json']

resources:
  Resources: ${file(./config/serverless/resources/dynamo.project.table.yaml)}

package:
  excludeDevDependencies: true
  individually: true

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          path: hello
          method: get
